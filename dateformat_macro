Sub FormatDateColumnsInAllTables()
    Dim ws As Worksheet
    Dim tbl As ListObject
    Dim col As ListColumn
    Dim headerText As String
    Dim cell As Range
    
    ' Loop through all worksheets in the active workbook.
    For Each ws In ThisWorkbook.Worksheets
        ' Loop through each table (ListObject) on the current worksheet.
        For Each tbl In ws.ListObjects
            ' Loop through each column in the table.
            For Each col In tbl.ListColumns
                headerText = col.Header ' Get header text from the table column.
                ' Check if the header contains "date" (case-insensitive).
                If InStr(1, headerText, "date", vbTextCompare) > 0 Then
                    ' Format the data area of the column to "mm/dd/yyyy".
                    col.DataBodyRange.NumberFormat = "mm/dd/yyyy"
                    
                    ' Optional: Try to force a conversion to date for each cell.
                    For Each cell In col.DataBodyRange
                        On Error Resume Next  ' In case any value cannot be converted.
                        cell.Value = CDate(cell.Value)
                        On Error GoTo 0
                    Next cell
                End If
            Next col
        Next tbl
    Next ws
End Sub
MarsKey = UPPER(TRIM([PO No])) & "-" & UPPER(TRIM([Item No]))



PO_Bridge =
FILTER(
    DISTINCT(
        UNION(
            SELECTCOLUMNS(InternalLines, "PO", InternalLines[PO]),
            SELECTCOLUMNS(CustomerLines, "PO", CustomerLines[PO])
        )
    ),
    NOT ISBLANK([PO]) && TRIM([PO]) <> ""
)




LineCounts = Table.Group(Source, {"PO"}, {{"LineCount", each Table.RowCount(_), Int64.Type}})


DeliveredQty_Internal = SUM(InternalLines[DeliveredQty])
OrderedQty_Customer = SUM(CustomerLines[OrderedQty])


TotalDelivered_Internal :=
CALCULATE(
    SUM(InternalLines[DeliveredQty]),
    CROSSFILTER(PO_Bridge[PO], InternalLines[PO], BOTH)
)

TotalDelivered_Customer :=
CALCULATE(
    SUM(CustomerLines[DeliveredQty]),
    CROSSFILTER(PO_Bridge[PO], CustomerLines[PO], BOTH)
)

DeliveredQty_Difference :=
ABS(
    [TotalDelivered_Internal] - [TotalDelivered_Customer]
)

DeliveredQty_Similarity :=
VAR Internal = [TotalDelivered_Internal]
VAR Customer = [TotalDelivered_Customer]
RETURN
IF(
    Internal > 0 && Customer > 0,
    1 - DIVIDE(ABS(Internal - Customer), MAX(Internal, Customer)),
    BLANK()
)


TotalDelivered_Internal :=
CALCULATE(
    SUM(InternalLines[DeliveredQty]),
    ALLEXCEPT(InternalLines, InternalLines[PO])
)

TotalDelivered_Customer :=
CALCULATE(
    SUM(CustomerLines[DeliveredQty]),
    ALLEXCEPT(CustomerLines, CustomerLines[PO])
)

DeliveredQty_Diff_PO :=
ABS(
    [TotalDelivered_Internal] - [TotalDelivered_Customer]
)






